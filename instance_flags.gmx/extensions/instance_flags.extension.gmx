<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>instance_flags</name>
  <version>1.0.0</version>
  <packageID>cc.yal.iflags</packageID>
  <ProductID>7A88596AF9D7720741852E307765F77B</ProductID>
  <date>03/09/17</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>611319914</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources>
    <Resource>Included Files\instance_flags.html</Resource>
    <Resource>Included Files\collision_list_funcs.gmez</Resource>
  </IncludedResources>
  <files>
    <file>
      <filename>instance_flags.gml</filename>
      <origname>extensions\gml.gml</origname>
      <init>instance_flags_init</init>
      <final></final>
      <kind>2</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>105554172285166</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>instance_flags_init</name>
          <externalName>instance_flags_init</externalName>
          <kind>11</kind>
          <help></help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>collision_point_flags</name>
          <externalName>collision_point_flags</externalName>
          <kind>11</kind>
          <help>collision_point_flags(x, y, obj, prec, notme, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>8</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>collision_point_flags_all</name>
          <externalName>collision_point_flags_all</externalName>
          <kind>11</kind>
          <help>collision_point_flags_all(x, y, obj, prec, notme, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>collision_circle_flags</name>
          <externalName>collision_circle_flags</externalName>
          <kind>11</kind>
          <help>collision_circle_flags(x, y, rad, obj, prec, notme, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>9</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>collision_circle_flags_all</name>
          <externalName>collision_circle_flags_all</externalName>
          <kind>11</kind>
          <help>collision_circle_flags_all(x, y, rad, obj, prec, notme, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>collision_rectangle_flags</name>
          <externalName>collision_rectangle_flags</externalName>
          <kind>11</kind>
          <help>collision_rectangle_flags(x, y, x, y, obj, prec, notme, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>10</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>collision_rectangle_flags_all</name>
          <externalName>collision_rectangle_flags_all</externalName>
          <kind>11</kind>
          <help>collision_rectangle_flags_all(x, y, x, y, obj, prec, notme, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>collision_line_flags</name>
          <externalName>collision_line_flags</externalName>
          <kind>11</kind>
          <help>collision_line_flags(x, y, x, y, obj, prec, notme, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>10</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>collision_line_flags_all</name>
          <externalName>collision_line_flags_all</externalName>
          <kind>11</kind>
          <help>collision_line_flags_all(x, y, x, y, obj, prec, notme, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>collision_ellipse_flags</name>
          <externalName>collision_ellipse_flags</externalName>
          <kind>11</kind>
          <help>collision_ellipse_flags(x, y, x, y, obj, prec, notme, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>10</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>collision_ellipse_flags_all</name>
          <externalName>collision_ellipse_flags_all</externalName>
          <kind>11</kind>
          <help>collision_ellipse_flags_all(x, y, x, y, obj, prec, notme, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>instance_nearest_flags</name>
          <externalName>instance_nearest_flags</externalName>
          <kind>11</kind>
          <help>instance_nearest_flags(x, y, obj, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_furthest_flags</name>
          <externalName>instance_furthest_flags</externalName>
          <kind>11</kind>
          <help>instance_furthest_flags(x, y, obj, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_find_nearest_flags_num</name>
          <externalName>instance_find_nearest_flags_num</externalName>
          <kind>11</kind>
          <help>instance_find_nearest_flags_num(x, y, obj, num, flags, value, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>instance_find_furthest_flags_num</name>
          <externalName>instance_find_furthest_flags_num</externalName>
          <kind>11</kind>
          <help>instance_find_furthest_flags_num(x, y, obj, num, flags, value, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>instance_number_flags</name>
          <externalName>instance_number_flags</externalName>
          <kind>11</kind>
          <help>instance_number_flags(obj, flags, value)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_find_flags</name>
          <externalName>instance_find_flags</externalName>
          <kind>11</kind>
          <help>instance_find_flags(obj, index, flags, value)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_find_flags_all</name>
          <externalName>instance_find_flags_all</externalName>
          <kind>11</kind>
          <help>instance_find_flags_all(obj, flags, value, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>place_meeting_flags</name>
          <externalName>place_meeting_flags</externalName>
          <kind>11</kind>
          <help>place_meeting_flags(x, y, obj, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_place_flags</name>
          <externalName>instance_place_flags</externalName>
          <kind>11</kind>
          <help>instance_place_flags(x, y, obj, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_place_flags_all</name>
          <externalName>instance_place_flags_all</externalName>
          <kind>11</kind>
          <help>instance_place_flags_all(x, y, obj, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>position_meeting_flags</name>
          <externalName>position_meeting_flags</externalName>
          <kind>11</kind>
          <help>position_meeting_flags(x, y, obj, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_position_flags</name>
          <externalName>instance_position_flags</externalName>
          <kind>11</kind>
          <help>instance_position_flags(x, y, obj, flags, value, not)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>instance_position_flags_all</name>
          <externalName>instance_position_flags_all</externalName>
          <kind>11</kind>
          <help>instance_position_flags_all(x, y, obj, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>instance_nearest_flags_num</name>
          <externalName>instance_nearest_flags_num</externalName>
          <kind>11</kind>
          <help>instance_nearest_flags_num(x, y, obj, num, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>instance_furthest_flags_num</name>
          <externalName>instance_furthest_flags_num</externalName>
          <kind>11</kind>
          <help>instance_furthest_flags_num(x, y, obj, num, flags, value, not, ?out)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
      </functions>
      <constants>
        <constant>
          <name>instance_flags_ordered</name>
          <value>g_instance_flags_ordered</value>
          <hidden>0</hidden>
        </constant>
      </constants>
    </file>
  </files>
</extension>
